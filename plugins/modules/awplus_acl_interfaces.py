#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_acl_interfaces
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_acl_interfaces
version_added: 2.13.6
short_description: 'Manages the configuration of ACL interfaces'
description: 'This module manages the configuration of ACL interfaces on Alliedware Plus devices.'
author:
  - Lucas Trickett
  - Ben Hoelker
notes:
  - Tested against AlliedWare Plus on SBx908NG.
options:
  config:
    description:
      - Configuration of the ACL module.
    type: list
    elements: dict
    suboptions:
      name:
        description:
          - name of the interface
        type: str
      acl_names:
        description:
          - List of ACLs to apply to interface.
        type: list
        elements: str
  state:
    description:
      - The state the configuration should be left in, defaults to merged
    choices:
      - merged
      - replaced
      - overridden
      - deleted
    default: merged
"""
EXAMPLES = """
# Using Merged

# Before state:
# -------------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !

- name: Merged Example
      awplus_acl_interfaces:
        config:
          - interface:
            - name: port1.1.1
              acl_names:
                - test_acl_3
        state: merged

#After state:
# -----------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
#  access-group test_acl_3
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !


# Using Replaced

# Before state:
# -------------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
#  access-group test_acl_3
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !

- name: Merged test - merge invalid config 1
  awplus_acl_interfaces:
    config:
      - interface:
        - name: port1.1.1
          acl_names:
            - test_acl_4
    state: replaced

# After state:
# -----------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_4
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !


# Using Overridden

# Before state:
# -------------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !

- name: Overidden Example
      awplus_acl_interfaces:
        config:
          - interface:
            - name: port1.1.3
              acl_names:
                - test_acl_4
        state: overridden

# After state:
# -----------
#
awplus#show running-config interface
interface port1.1.3
 switchport
 switchport mode access
 access-group test_acl_4
!


# Using Deleted

# Before state:
# -------------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
#  access-group test_acl_3
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !

- name: Deleted Example
      awplus_acl_interfaces:
        config:
          - interface:
            - name: port1.1.1
              acl_names:
                - test_acl_3
        state: deleted

# After state:
# -----------
#
# awplus#show running-config interface
# interface port1.1.1
#  switchport
#  switchport mode access
#  access-group test_acl_1
# !
# interface port1.1.2
#  switchport
#  switchport mode access
#  access-group test_acl_2
# !


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['interface port1.6.1', 'access-group acl_1']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.acl_interfaces.acl_interfaces import Acl_interfacesArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.acl_interfaces.acl_interfaces import Acl_interfaces


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Acl_interfacesArgs.argument_spec,
                           supports_check_mode=True)

    result = Acl_interfaces(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
