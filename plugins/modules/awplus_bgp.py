#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_bgp
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_bgp
short_description: 'Manages Border Gateway Protocol (BGP) configuration of AlliedWare Plus devices'
description: 'This module manages Border Gateway Protocol (BGP) attributes of AlliedWare Plus devices.'
version_added: 2.10.4
author: Darryl Alang
notes:
  - 'Tested against AlliedWare Plus AT-x930-28GTX'
options:
  config:
    description: The provided configuration.
    type: dict
    suboptions:
      bgp_as:
        description: Specifies the 32-bit Autonomous System (AS) number.
        required: true
        type: int
      router_id:
        description: Router Identifier (ID) of the BGP router VRF instance in IP format.
        type: str
      log_neighbor_changes:
        description:
        - Enable/disable logging neighbor up/down and reset reason.
        type: bool
      neighbors:
        description:
        - Specifies BGP neighbor related configurations.
        type: list
        elements: dict
        suboptions:
          neighbor:
            description:
            - Neighbor router address. Can either be an IPv4 or IPv6 address or a neighbor tag.
            required: true
            type: str
          remote_as:
            description:
            - Remote AS of the BGP neighbor to configure.
            type: int
            required: true
          update_source:
            description:
            - Source of the routing updates.
            type: str
          password:
            description:
            - Password to authenticate the BGP peer connection.
            type: str
          enabled:
            description:
            - Administratively shutdown or enable a neighbor.
            type: bool
          description:
            description:
            - Neighbor specific description.
            type: str
          ebgp_multihop:
            description:
            - Specifies the maximum hop count for EBGP neighbors not on directly connected
              networks.
            - The range is from 1 to 255.
            type: int
          local_as:
            description:
            - Specifies the AS number to use with BGP neighbor.
            type: int
          peer_group:
            description:
            - Adds a BGP neighbor to an existing peer group.
            type: str
          timers:
            description:
            - Specifies BGP neighbor timer related configurations.
            type: dict
            suboptions:
              keepalive:
                description:
                - Frequency (in seconds) at which a router sends keepalive messages to its neighbor.
                  to its peer.
                - The range is from 0 to 65535.
                type: int
              holdtime:
                description:
                - Interval (in seconds) after which, on not receiving a keepalive message, the router
                  declares a neighbor dead.
                - The range is from 0 to 65535.
                type: int
              connect:
                description:
                - Specifies the connect timer in seconds.
                - The range is from 1 to 65535.
                type: int
      networks:
        description:
        - Specify Networks to announce via BGP.
        - For operation replace, this option is mutually exclusive with networks option
          under address_family.
        - For operation replace, if the device already has an address family activated,
          this option is not allowed.
        type: list
        elements: dict
        suboptions:
          prefix:
            description:
            - Network ID to announce via BGP.
            required: true
            type: str
          masklen:
            description:
            - Subnet mask length for the Network to announce.
            type: int
            default: 32
          route_map:
            description:
            - Route map to modify the attributes.
            type: str
          backdoor:
            description:
              - Specifies a BGP backdoor route.
            type: bool
      address_family:
        description:
        - Specifies BGP address family related configurations.
        type: list
        elements: dict
        suboptions:
          vrf:
            description:
            - The name of the VRF instance.
            type: str
            required: true
          redistribute:
            description:
            - Specifies the redistribute information from another routing protocol.
            type: list
            elements: dict
            suboptions:
              protocol:
                description:
                - Specifies the protocol for configuring redistribute information.
                choices:
                - connected
                - isis
                - ospf
                - rip
                - static
                required: true
                type: str
              route_map:
                description:
                - Specifies the route map reference.
                type: str
          networks:
            description:
            - Specify Networks to announce via BGP.
            type: list
            elements: dict
            suboptions:
              prefix:
                description:
                - Network ID to announce via BGP.
                required: true
                type: str
              masklen:
                description:
                - Subnet mask length for the Network to announce.
                type: int
              route_map:
                description:
                - Route map to modify the attributes.
                type: str
              backdoor:
                description:
                - Specifies a BGP backdoor route.
                type: bool
          neighbors:
            description:
            - Specifies BGP neighbor related configurations in Address Family configuration
              mode.
            type: list
            elements: dict
            suboptions:
              neighbor:
                description:
                - Neighbor router address. Can either be an IPv4 or IPv6 address or a neighbor tag.
                required: true
                type: str
              remote_as:
                description:
                - Remote AS of the BGP neighbor to configure.
                type: int
                required: true
              activate:
                description:
                - Enable the Address Family for this neighbor.
                type: bool
              maximum_prefix:
                description:
                - Maximum number of prefix limit to accept from this peer.
                - The range is from 1 to 4294967295.
                type: int
              next_hop_self:
                description:
                - Enable/disable the next hop calculation for this neighbor.
                type: bool
              prefix_list_in:
                description:
                - Specifies that the IP prefix list applies to incoming advertisements.
                type: str
              prefix_list_out:
                description:
                - Specifies that the IP prefix list applies to outgoing advertisements.
                type: str
              remove_private_as:
                description:
                - Remove the private AS number from outbound updates.
                type: bool
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - deleted
    default: merged
"""
EXAMPLES = """
# Using merged
#
# Before state:
# -------------
# aw1#show running-config bgp
# !
# router bgp 100
#  !
#  address-family ipv4 vrf red
#  exit-address-family
# !

- name: Configure a simple ASN
  alliedtelesis.awplus.awplus_bgp:
    config:
      bgp_as: 100
      log_neighbor_changes: true
      router_id: 192.0.2.4
    state: merged

# After state:
# ------------
# aw1#show running-config bgp
# !
# router bgp 100
#  bgp router-id 192.0.2.4
#  bgp log-neighbor-changes
#  !
#  address-family ipv4 vrf red
#  exit-address-family
# !


# Using replaced
#
# Before state:
# -------------
# aw1#show running-config bgp
# !
# router bgp 100
#  !
#  address-family ipv4 vrf red
#  exit-address-family
# !

- name: Replace device configuration with provided configuration
  alliedtelesis.awplus.awplus_bgp:
    config:
      bgp_as: 100
      log_neighbor_changes: true
      router_id: 192.0.2.4
    state: replaced

# After state:
# ------------
# aw1#show running-config bgp
# !
# router bgp 100
#  bgp router-id 12.3.4.5
#  bgp log-neighbor-changes
# !


# Using deleted
#
# Before state:
# -------------
# aw1#show running-config bgp
# !
# router bgp 100
#  !
#  address-family ipv4 vrf red
#  exit-address-family
# !

- name: Delete LLDP attributes of given interfaces
  alliedtelesis.awplus.awplus_bgp:
    state: deleted

# After state:
# -------------
# aw1#show running-config bgp
# !


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['router bgp 100',
           'bgp router-id 192.0.2.4']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.bgp.bgp import BgpArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.bgp.bgp import Bgp


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=BgpArgs.argument_spec,
                           supports_check_mode=True)

    result = Bgp(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
