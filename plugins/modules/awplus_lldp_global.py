#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_lldp_global
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_lldp_global
short_description: 'Manages attributes of AlliedWare Plus Link Layer Discovery Protocol (LLDP)'
description: 'Manages attributes of AlliedWare Link Layer Discovery Protocol (LLDP).'
version_added: 2.10.4
author: Darryl Anne Alang
notes:
  - 'Tested against AlliedWare Plus AT-x930-28GTX'
options:
  config:
    description: The provided configuration.
    type: dict
    suboptions:
      faststart_count:
        description: Set the fast start count for LLDP-MED. Range from 1 to 10. Initial value is 3.
        type: int
      holdtime_multiplier:
        description: The value to be multiplied to the transmit interval to give the Time To Live (TTL) value
          that is advertised to neighbors. Range from 2 to 10. Initial value is 4.
        type: int
      non_strict_med_tlv_order_check:
        description: Enable non-strict LLDP-MED TLV order checking. Initial value is False.
        type: bool
      notification_interval:
        description: The minimum interval between LLDP notifications. Range 5-3600. Initial value is 5.
        type: int
      port_number_type:
        description: The type of port identifier used to enumerate LLDP MIB local port entries. Initial value is 'number'.
        choices:
          - ifindex
          - number
        type: str
      reinit:
        description:
        - The value of reinitialization delay, which is the minimum time after disabling LLDP on a port before
          it can reinitialize. Range from 1 to 10. Initial value is 2.
        type: int
      enabled:
        description: Enable LLDP operation. Initial value is False.
        type: bool
      timer:
        description: The time interval between regular transmissions of LLDP advertisements to neighbors. Range 5-32768.
          Initial value is 30.
        type: int
      tx_delay:
        description: The minimum time between transmitting LLDP advertisements due to a change in LLDP MIB content. Range 1-8192.
          Initial value is 2.
        type: int
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - deleted
    default: merged
"""
EXAMPLES = """
# Using merged
#
# Before state:
# -------------
# aw1#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Disabled    [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 30 secs     [30]
#   Hold-time Multiplier ...... 4           [4]
#   (Computed TTL value ....... 120 secs)
#   Reinitialization Delay .... 2 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]

- name: Merge provided congfiguration with device configuration
  alliedtelesis.awplus.awplus_lldp_global:
    config:
      holdtime: 10
      enabled: True
      reinit: 3
      timer: 10
    state: merged

# After state:
# ------------
# aw1#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Enabled     [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 10 secs     [30]
#   Hold-time Multiplier ...... 10          [4]
#   (Computed TTL value ....... 100 secs)
#   Reinitialization Delay .... 3 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]


# Using replaced
#
# Before state:
# -------------
# awplus#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Enabled     [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 10 secs     [30]
#   Hold-time Multiplier ...... 10          [4]
#   (Computed TTL value ....... 120 secs)
#   Reinitialization Delay .... 3 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]

- name: Replaces LLDP device configuration with provided configuration
  alliedtelesis.awplus.awplus_lldp_global:
    config:
      holdtime: 4
      reinit: 5
    state: replaced

# After state:
# -------------
# awplus#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Disabled    [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 30 secs     [30]
#   Hold-time Multiplier ...... 4           [4]
#   (Computed TTL value ....... 120 secs)
#   Reinitialization Delay .... 5 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]


# Using Deleted without any config passed
# "(NOTE: This will clear all configured LLDP module attributes)"
#
# Before state:
# -------------
# aw1#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Enabled     [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 10 secs     [30]
#   Hold-time Multiplier ...... 10          [4]
#   (Computed TTL value ....... 100 secs)
#   Reinitialization Delay .... 5 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]

- name: Delete LLDP attributes
  alliedtelesis.awplus.awplus_lldp_global:
    state: deleted

# After state:
# -------------
# aw1#show lldp
# LLDP Global Configuration:                [Default Values]
#   LLDP Status ............... Disabled    [Disabled]
#   Notification Interval ..... 5 secs      [5]
#   Tx Timer Interval ......... 30 secs     [30]
#   Hold-time Multiplier ...... 4           [4]
#   (Computed TTL value ....... 120 secs)
#   Reinitialization Delay .... 2 secs      [2]
#   Tx Delay .................. 2 secs      [2]
#   Port Number Type .......... Port-Number [Port-Number]
#   Fast Start Count .......... 3           [3]


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['lldp reinit 7', 'lldp faststart-count 7']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.lldp_global.lldp_global import Lldp_globalArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.lldp_global.lldp_global import Lldp_global


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    required_if = [
        ("state", "merged", ("config",)),
        ("state", "replaced", ("config",)),
    ]

    module = AnsibleModule(argument_spec=Lldp_globalArgs.argument_spec,
                           supports_check_mode=True,
                           required_if=required_if,)

    result = Lldp_global(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
