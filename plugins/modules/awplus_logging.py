#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_logging
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_logging
short_description: 'Manages the attributes of AlliedWare Plus logging'
description: 'This module manages logging configuration of AlliedWare Plus devices.'
version_added: 2.10.4
author: Darryl Alang
notes:
  - 'Tested against AlliedWare Plus AT-x930-28GTX'
options:
  config:
    description: A dictionary of interface options.
    type: list
    elements: dict
    suboptions:
      dest:
        description:
          - Destination of the logs.
        choices:
          - buffered
          - console
          - external
          - facility
          - host
          - monitor
          - permanent
        type: str
        required: true
      name:
        description:
          - The remote syslog server the device sends log messages to via UDP port 514.
          - Required when I(dest=host).
        type: str
      size:
        description:
          - Size of the RAM log in kilobytes. The acceptable value is in range from 50 to 250.
          - This is mutually exclusive to I(level) and I(facility).
        type: int
      facility:
        description:
          - Filter messages by syslog facility.
          - This is mutually exclusive to I(size).
        type: str
      level:
        description:
          - Filter messages by severity level.
          - This is mutually exclusive to I(size).
        choices:
          - alerts
          - critical
          - debugging
          - emergencies
          - errors
          - informational
          - notices
          - warnings
        type: str
  state:
    description:
    - The state the configuration should be left in.
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
"""
EXAMPLES = """
# Using merged

# Before state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console level alerts facility ftp

- name: Merge provided configuration with device configuration
  alliedtelesis.awplus.awplus_logging:
    config:
      - dest: console
        facility: ftp
    state: merged

# After state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console facility ftp
# log console level alerts facility ftp


# Using replaced

# Before state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console level alerts facility ftp

- name: Replace device configuration with provided configuration
  alliedtelesis.awplus.awplus_logging:
    config:
      - dest: console
        facility: ftp
    state: replaced

# After state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console facility ftp


# Using overridden

# Before state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console level alerts facility ftp

- name: Override device configuration with provided configuration
  alliedtelesis.awplus.awplus_logging:
    config:
      - dest: console
        facility: ftp
    state: overridden

# After state:
# -------------
# awplus(config)#show running-config | include log
# log console facility ftp


# Using deleted

# Before state:
# -------------
# awplus(config)#show running-config | include log
# log buffered size 51
# log console facility ftp
# log console level alerts facility ftp

- name: Delete all logging configurations
  alliedtelesis.awplus.awplus_logging:
    state: deleted

# After state:
# -------------
# awplus(config)#show running-config | include log


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['log facility cron']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.logging.logging import LoggingArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.logging.logging import Logging


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    required_if = [
        ("state", "merged", ("config",)),
        ("state", "replaced", ("config",)),
        ("state", "overridden", ("config",)),
    ]
    module = AnsibleModule(argument_spec=LoggingArgs.argument_spec,
                           required_if=required_if,
                           supports_check_mode=True)

    result = Logging(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
