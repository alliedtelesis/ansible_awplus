#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_interfaces
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_interfaces
short_description: 'Manages the attributes of AlliedWare Plus interfaces'
description: 'This module manages interfaces configuration of AlliedWare Plus devices.'
version_added: 2.10.4
author: Darryl Alang
notes:
  - 'Tested against AlliedWare Plus AT-x930-28GTX'
options:
  config:
    description: A dictionary of interface options.
    type: list
    suboptions:
      name:
        description:
        - Full name of interface, interface range or comma-separated interfaces.
          Comma-separated interface names should be of the same type.
        type: str
        required: True
      description:
        description:
        - Interface specific description.
        type: str
      enabled:
        description:
        - Administrative state of the interface.
        - Set the value to C(true) to administratively enable the interface or C(false) to disable it.
        type: bool
        default: True
      speed:
        description:
        - Interface link speed. Applicable for ethernet and switchport interfaces only.
        type: str
      mtu:
        description:
        - MTU size for a specific interface. Applicable for VLAN, ethernet and openflow interfaces only.
        - Refer to documentation for valid values.
        type: int
      duplex:
        description:
        - Interface link status. Applicable for switchport interfaces only, either in half duplex,
          full duplex or in automatic state which negotiates the duplex automatically.
        - Note, some AlliedWare Plus devices does not support half duplex. Refer to documentation for
          valid values.
        type: str
        choices:
          - half
          - full
          - auto
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
"""
EXAMPLES = """
# Using merged

# Before state:
# -------------
# interface port1.0.1-1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  ip address 192.168.5.2/24
# !

- name: Merge provided configuration with device configuration
  alliedtelesis.awplus.awplus_interfaces:
    config:
      - name: port1.0.2
        description: Merged by Ansible Network
        duplex: full

      - name: vlan1
        description: Merged by Ansible Network
        mtu: 234
    state: merged

# After state:
# ---------------------
# interface port1.0.1
#  switchport
#  switchport mode access
# !
# interface port1.0.2
#  description Merged by Ansible Network
#  duplex full
#  switchport
#  switchport mode access
# !
# interface port1.0.3-1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Merged by Ansible Network
#  mtu 234
#  ip address 192.168.5.2/24
# !


# Using replaced

# Before state:
# -------------
# interface port1.0.1-1.0.2
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Merged by Ansible Network
#  speed 1000
#  duplex full
#  shutdown
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  duplex full
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Merged by Ansible Network
#  mtu 234
#  ip address 192.168.5.2/24
# !

- name: Replace device configuration with provided configuration
  alliedtelesis.awplus.awplus_interfaces:
    config:
      - name: port1.0.3
        description: Replaced by Ansible Network

      - name: vlan1
        description: Replaced by Ansible Network
        mtu: 900 # in the range <68-1582>
        enabled: True
    state: replaced

# After state:
# ---------------------
# interface port1.0.1-1.0.2
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Replaced by Ansible Network
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  duplex full
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Replaced by Ansible Network
#  mtu 900
#  ip address 192.168.5.2/24
# !


# Using overridden

# Before state:
# -------------
# interface port1.0.1
#  switchport
#  switchport mode access
# !
# interface port1.0.2
#  description Merged by Ansible Network
#  duplex full
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Replaced by Ansible Network
#  speed 1000
#  duplex full
#  shutdown
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  switchport
#  switchport mode access
# !
# # interface vlan1
#  ip helper-address 172.26.3.8
# !
# interface vlan2
#  ip address dhcp client-id vlan2 hostname test.com
# !
# interface vlan5
#  description Replaced by Ansible Network
#  mtu 900
# !
# interface vlan13
#  ip address 13.13.13.13/24
# !

- name: Override device configuration of all interfaces with provided configuration
  alliedtelesis.awplus.awplus_interfaces:
    config:
      - name: port1.0.2
        description: Overridden by Ansible Network
        duplex: full
        speed: 2500
        enabled: True

      - name: vlan2
        description: Overridden by Ansible Network
        mtu: 920
        enabled: True
    state: overriden

# After state:
# -------------------------
# interface port1.0.1
#  switchport
#  switchport mode access
# !
# interface port1.0.2
#  description Overridden by Ansible Network
#  duplex full
#  switchport
#  switchport mode access
# !
# interface port1.0.3-1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  ip helper-address 172.26.3.8
# !
# interface vlan2
#  description Overridden by Ansible Network
#  mtu 920
#  ip address dhcp client-id vlan2 hostname test.com
# !
# interface vlan13
#  ip address 13.13.13.13/24
# !


# Using deleted

# Before state:
# -------------
# interface port1.0.1
#  switchport
#  switchport mode access
# !
# interface port1.0.2
#  description Merged by Ansible Network
#  duplex full
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Replaced by Ansible Network
#  speed 1000
#  duplex full
#  shutdown
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Override by Ansible Network
#  ip address 192.168.5.2/24
# !

- name: Delete module attributes of given interfaces (Note that this won't delete the interface itself)
  alliedtelesis.awplus.awplus_interfaces:
    config:
      - name: port1.0.2
    state: deleted

# After state:
# ---------------------------
# interface port1.0.1-1.0.2
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Replaced by Ansible Network
#  speed 1000
#  duplex full
#  shutdown
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Override by Ansible Network
#  ip address 192.168.5.2/24
# !

# Using deleted without any config passed
# NOTE: This will delete all of configured resource module attributes from each configured interface

# Before state:
# -----------------------
# interface port1.0.1
#  switchport
#  switchport mode access
# !
# interface port1.0.2
#  duplex full
#  switchport
#  switchport mode access
# !
# interface port1.0.3
#  description Replaced by Ansible Network
#  speed 1000
#  duplex full
#  shutdown
#  switchport
#  switchport mode access
# !
# interface port1.0.4
#  description Override by Ansible Network
#  duplex full
#  switchport
#  switchport mode access
# !
# interface vlan1
#  description Override by Ansible Network
#  ip address 192.168.5.2/24
# !

- name: Delete module attributes of all interfaces
  alliedtelesis.awplus.awplus_interfaces:
    config:
    state: deleted

# After state:
# ---------------------------
# interface port1.0.1-1.0.4
#  switchport
#  switchport mode access
# !
# interface vlan1
#  ip address 192.168.5.2/24
# !


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['interface port1.0.2', 'description lightning test']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.interfaces.interfaces import InterfacesArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.interfaces.interfaces import Interfaces


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    required_if = [
        ("state", "merged", ("config",)),
        ("state", "replaced", ("config",)),
        ("state", "overridden", ("config",)),
    ]
    module = AnsibleModule(argument_spec=InterfacesArgs.argument_spec,
                           required_if=required_if,
                           supports_check_mode=True)

    result = Interfaces(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
