#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2023 Allied Telesis
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for awplus_class_maps
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: awplus_class_maps
version_added: 2.9
short_description: Manage classifier maps on Allied Telesis AlliedWare Plus devices.
description: This module manages properties of classifier maps on Allied Telesis AlliedWare Plus devices.
author: Tony van der Peet
notes:
- Tested against AlliedWare Plus on SBx908NG and x930.
options:
  config:
    description: A list of classifier map configurations.
    type: list
    elements: dict
    suboptions:
      name:
        description:
        - ID of the classifier, an arbitrary string.
        type: str
        required: True
      access_group:
        description:
        - ID of the ACL this classifier uses. Only hardware ACLs are valid.
        type: str
      cos:
        description:
        - Class of Service match value for this classifier. Range 0-7.
        type: int
      dscp:
        description:
        - DSCP match value for this classifier. Range 0-63.
        type: int
      eth_format:
        description:
        - Ethernet frame format match value for this classifier.
        type: str
        choices:
        - 802dot2-tagged
        - 802dot2-untagged
        - ethii-any
        - ethii-tagged
        - ethii-untagged
        - netwareraw-tagged
        - netwareraw-untagged
        - snap-tagged
        - snap-untagged
      eth_protocol:
        description:
        - Ethernet protocol match value for this classifier. See vendor documentation for valid values.
        type: str
      inner_cos:
        description:
        - Class of Service match value for this classifier, inner VLAN tag. Range 0-7.
        type: int
      inner_vlan:
        description:
        - VLAN ID match for this classifier, inner VLAN tag. Range 1-4094.
        type: int
      ip_precedence:
        description:
        - IP precedence match for this classifier. Range 0-7.
        type: int
      mac_type:
        description:
        - MAC address type match for this classifier.
        type: str
        choices:
        - l2bcast
        - l2mcast
        - l2ucast
      tcp_flags:
        description:
        - TCP flags match value for this classifier. Multiple flags can be specified.
        type: dict
        suboptions:
          ack:
            description: Match on the ACK bit
            type: bool
          fin:
            description: Match on the FIN bit
            type: bool
          psh:
            description: Match on the PSH bit
            type: bool
          rst:
            description: Match on the RST bit
            type: bool
          syn:
            description: Match on the SYN bit
            type: bool
          urg:
            description: Match on the URG bit
            type: bool
      vlan:
        description:
        - VLAN ID match for this classifier. Range 1-4094.
        type: int
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
"""
EXAMPLES = """
# Using Merged

# Before state:
# -------------
#
# awplus#show running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
# !

- name: Merge a new classifier and add an option to another
  awplus_class_maps:
    config:
      - name: am
        cos: 3
      - name: am2
        access_group: 3001
    operation: merged

# After state:
# -------------
#
# awplus#sh running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
#  match cos 3
# !
# class-map am2
#  match access-group 3001
# !


# Using Replaced

# Before state:
# -------------
#
# awplus#sh running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
#  match cos 3
# !

- name: Change access-group and remove match on cos
  awplus_class_maps:
    config:
      - name: am
        access_group: 3001
    operation: replaced

# After state:
# -------------
#
# awplus#sh running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3001
# !


# Using Overridden

# Before state:
# -------------
#
# awplus#sh running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
#  match cos 3
# !
# class-map am2
#  match access-group 3001
# !

- name: Override classifier map configuration
  awplus_class_maps:
    config:
      - name: am3
        access_group: 3003
    operation: overridden

# After state:
# -------------
#
# awplus#sh running-config | begin class
#
# ...skipping
# class-map am3
#  match access-group 3003
# !


# Using Deleted

# Before state:
# -------------
#
# awplus#sh running | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
#  match inner-vlan 1234
# !

- name: Delete a given classifier map
  awplus_class_maps:
    config:
      - name: am
    operation: deleted

# After state:
# -------------
#
# awplus#show running-config | begin class
#
# ...skipping
# awplus#


# Using Deleted

# Before state:
# -------------
#
# awplus#sh running | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
#  match inner-vlan 1234
# !

- name: Delete a match from a given classifier map
  awplus_class_maps:
    config:
      - name: am
        inner_vlan: 1234
    operation: deleted

# After state:
# -------------
#
# awplus#show running-config | begin class
#
# ...skipping
# class-map am
#  match access-group 3002
# !


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.argspec.class_maps.class_maps import Class_mapsArgs
from ansible_collections.alliedtelesis.awplus.plugins.module_utils.network.awplus.config.class_maps.class_maps import Class_maps


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Class_mapsArgs.argument_spec,
                           supports_check_mode=True)

    result = Class_maps(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
